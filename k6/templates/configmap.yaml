apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-test-script
  namespace: {{ .Release.Namespace }}
data:
  load-test.js: |
    import http from 'k6/http';
    import { sleep, check, group } from 'k6';
    
    export const options = {
      stages: [
        { duration: '{{ .Values.test.duration.rampUp }}', target: {{ .Values.test.vus }} },
        { duration: '{{ .Values.test.duration.steady }}', target: {{ .Values.test.vus }} },
        { duration: '{{ .Values.test.duration.rampDown }}', target: 0 },
      ],
    };
    
    export default function () {
      const baseUrl = '{{ .Values.targetUrl }}';
      
      {{- range .Values.endpoints }}
      group('{{ .path }}', function() {
        const url = `${baseUrl}{{ .path }}`;
        const response = http.{{ lower .method }}(url);
        
        check(response, {
          '{{ .path }} status is 200': (r) => r.status === 200,
          '{{ .path }} response time < 500ms': (r) => r.timings.duration < 500,
        });
      });
      {{- end }}
      
      sleep(1);
    }
