apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-loki
  namespace: monitoring
  labels:
    app: {{ .Release.Name }}-loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-loki
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-loki
    spec:
      serviceAccountName: {{ .Release.Name }}-loki
      securityContext:
        fsGroup: 10001
        runAsUser: 10001
        runAsGroup: 10001
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      initContainers:
        - name: init-directories
          image: busybox
          command: ['sh', '-c', 'mkdir -p /loki/chunks /loki/rules /loki/index /loki/cache && chmod -R 777 /loki']
          volumeMounts:
            - name: storage
              mountPath: /loki
      containers:
        - name: loki
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
          args:
            - -config.file=/etc/loki/local-config.yaml
          ports:
            - name: http-metrics
              containerPort: 3100
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            - name: storage
              mountPath: /loki
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 10
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 15
            timeoutSeconds: 1
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-loki-config
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-loki-pvc 